worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    upstream auth_service {
        server auth-service:1337;
    }

    upstream upload_service {
        server upload-service:8000;
    }

    server {
        listen 80;

        # Authentication subrequest logic
        location = /auth/validate {
            internal;
            proxy_pass http://auth_service/auth/validate;
            client_max_body_size 100M;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Cookie $http_cookie;
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_name $upstream_http_x_user_name;
            auth_request_set $user_email $upstream_http_x_user_email;
            proxy_set_header X-USER-ID $user_id;
            proxy_set_header X-USER-NAME $user_name;
            proxy_set_header X-USER-EMAIL $user_email;
        }

        # Allow public routes without auth
        location = /ui/login {
            proxy_pass http://auth_service/ui/login;    
        }

        location = /api/auth/login {
            proxy_pass http://auth_service/api/auth/login;    
        }

        location = /api/auth/register {
            proxy_pass http://auth_service/api/auth/register;    
        }

        # All protected routes (API + UI)
        location / {
            auth_request /auth/validate;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $user_name $upstream_http_x_user_name;
            auth_request_set $user_email $upstream_http_x_user_email;
            auth_request_set $user_id $upstream_http_x_user_id;

            error_page 401 = @redirect_login;

            proxy_set_header X-USER-ID $user_id;
            proxy_set_header X-USER-NAME $user_name;
            proxy_set_header X-USER-EMAIL $user_email;

            # Routing rules
            location /api/auth {
                proxy_pass http://auth_service/api/auth;
            }

            location /api/upload {
                proxy_pass http://upload_service/upload;
                client_max_body_size 100M;
            }

            location /api/ {
                proxy_pass http://auth_service/api/;
            }

            location /ui/ {
                proxy_pass http://auth_service/ui/;
            }
        }

        # Redirect on 401 to login page
        location @redirect_login {
            return 302 /ui/login;
        }
    }
}
